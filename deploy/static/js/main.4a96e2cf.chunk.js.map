{"version":3,"sources":["components/header/header.tsx","components/serverService/stote.ts","tool/hashFunction.ts","tool/getDate.ts","components/serverService/serverService.ts","components/UI/loader/loader.tsx","components/hooky/useFetching.ts","components/noteForm/noteForm.tsx","components/pages/addNewNotePage/addNewNotePage.tsx","components/noteDetail/noteDetail.tsx","components/pages/noteDetailPage/noteDetailPage.tsx","tool/deleteHashSymbol.ts","components/note/note.tsx","components/searchBar/searchBar.tsx","components/pages/notesPage/notesPage.tsx","components/pages/notFoundPage/notFoundPage.tsx","AppRouter.tsx","App.tsx","index.tsx"],"names":["Header","className","to","dbReq","db","hashCode","s","split","reduce","a","b","charCodeAt","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","console","log","Store","createDB","Promise","resolve","reject","indexedDB","open","onupgradeneeded","event","target","result","createObjectStore","keyPath","onsuccess","onerror","addNote","newNote","res","rej","transaction","objectStore","add","setTimeout","updateNote","note","req","openCursor","id","cursor","value","update","getNotes","tx","allNotes","push","continue","oncomplete","getNoteById","deleteNoteById","delete","isSuccess","notes","tags","tagsArr","notesArr","getSortedNotes","forEach","counter","noteTags","titleTags","descriptionTags","i","length","includes","amount","sort","sortedNoteArr","ServerService","createStore","addNewNote","getNotesByTags","Loader","useFetching","callBack","useState","isLoading","setIsLoading","err","setErr","fetchData","NoteForm","noteToStore","date","title","now","addNoteToServer","description","setNote","onSubmit","placeholder","onChange","tagsSrt","defineTags","type","required","onClick","ev","preventDefault","resetForm","alert","text","tagsStr","AddNewNotePage","NoteDetail","props","save","saveChanges","isEditMode","setIsEditMode","noteDetail","setNoteDetail","saveNote","defineTagsStr","MakeMarckedHtml","textWithIutHash","newText","deleteHashSymbolFromText","textArr","map","textt","NoteDetailPage","param","useParams","getNote","getNoteFromServer","useEffect","undefined","deleteHashSymbols","Note","noteProps","router","useHistory","onDeleteBtnClick","SearchBar","serchStr","setSerchStr","searchStr","join","setQuery","NotesPage","query","setNotes","getNotesFromServer","searchBarProps","key","NotFoundPage","AppRouter","location","useLocation","TransitionGroup","CSSTransition","timeout","classNames","unmountOnExit","path","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a96e2cf.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport \"./header.scss\";\r\n\r\nexport default function Header() {\r\n  \r\n  return(\r\n    <ul className=\"header\">\r\n      <li><NavLink className=\"header__item\" to=\"/notes\">Search notes</NavLink></li>\r\n      <li><NavLink className=\"header__item\" to=\"/addNewNote\">Add new note</NavLink></li>\r\n    </ul>\r\n  );\r\n}","import { NoteProps } from \"../note/note\";\r\n\r\nlet dbReq: IDBOpenDBRequest;\r\nlet db: IDBDatabase;\r\n\r\nconst createDB = () => {\r\n  return new Promise((resolve, reject) => {\r\n    dbReq = indexedDB.open('notesStore', 1);\r\n    dbReq.onupgradeneeded = (event: Event) => {\r\n      db = (<IDBRequest>event.target).result;\r\n      db.createObjectStore('notes', { keyPath: 'id' });\r\n      resolve(dbReq);\r\n    };\r\n    dbReq.onsuccess = (event: Event) => {\r\n      db = (<IDBOpenDBRequest>event.target).result;\r\n      resolve(dbReq);\r\n    };\r\n    dbReq.onerror = () => {\r\n      reject();\r\n    };\r\n  });\r\n}\r\n\r\nconst addNote = (newNote: NoteProps) => {\r\n  return new Promise((res, rej) => {\r\n    const tx = db.transaction(['notes'], 'readwrite');\r\n    const store = tx.objectStore('notes');\r\n    store.add(newNote);\r\n    setTimeout(() => res(true), 1000);\r\n  });\r\n};\r\n\r\nconst updateNote = (note:NoteProps) => {\r\n  return new Promise((res, rej) => {\r\n    const tx = db.transaction(['notes'], 'readwrite');\r\n    const store = tx.objectStore('notes');\r\n    const req = store.openCursor(note.id);\r\n  \r\n    req.onsuccess = (event: Event) => {\r\n      const cursor = (<IDBRequest>event.target).result;\r\n      if (cursor.value.id === note.id) {\r\n        cursor.update(note, note.id);\r\n        setTimeout(() => res(true), 1000);\r\n      }\r\n    };\r\n    req.onerror = () => rej(false);\r\n  });\r\n}\r\n\r\n\r\nconst getNotes = (): Promise<NoteProps[]> => {\r\n  return new Promise((resolve) => {\r\n      const tx = db.transaction(['notes'], 'readonly');\r\n      const store = tx.objectStore('notes');\r\n      const req = store.openCursor();\r\n      const allNotes: NoteProps[] = [];\r\n\r\n      req.onsuccess = (event: Event) => {\r\n        if ((<IDBRequest>event.target).result) {\r\n          const cursor = (<IDBRequest>event.target).result;\r\n          allNotes.push(cursor.value);\r\n          cursor.continue();\r\n        }\r\n      };\r\n\r\n      tx.oncomplete = () => {\r\n        setTimeout(() => resolve(allNotes),1000);\r\n      };\r\n  });\r\n}\r\n\r\nconst getNoteById = (id:string) => {\r\n  return new Promise((res, rej) => {\r\n    const tx = db.transaction(['notes'], 'readonly');\r\n    const store = tx.objectStore('notes');\r\n    const req = store.openCursor();\r\n  \r\n    req.onsuccess = (event: Event) => {\r\n      if ((<IDBRequest>event.target).result) {\r\n        const cursor = (<IDBRequest>event.target).result;\r\n        if(cursor.value.id === id) {\r\n          res(cursor.value);\r\n        }\r\n        cursor.continue();\r\n      } else {\r\n        res({});\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nconst deleteNoteById = (id:string) => {\r\n  return new Promise((res, rej) => {\r\n    const transaction = db.transaction(\"notes\", \"readwrite\");\r\n    const objectStore = transaction.objectStore(\"notes\");\r\n    const req = objectStore.delete(id);\r\n\r\n    req.onsuccess = () => {\r\n      res(true)\r\n    };\r\n    req.onerror = () => {\r\n      res(false)\r\n    }\r\n  });\r\n}\r\n\r\n\r\nconst Store = {\r\n  createDB,\r\n  addNote,\r\n  updateNote,\r\n  getNotes,\r\n  getNoteById,\r\n  deleteNoteById\r\n}\r\n\r\nexport default Store;","export function hashCode(s: string) {\r\n  return s.split('').reduce((a, b) => {\r\n    a = (a << 5) - a + b.charCodeAt(0);\r\n    return a & a;\r\n  }, 0);\r\n}","export function getDate() {\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, '0');\r\n  var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n  var yyyy = today.getFullYear();\r\n  console.log(mm + '/' + dd + '/' + yyyy)\r\n  return  mm + '/' + dd + '/' + yyyy;\r\n}","import { NoteProps } from \"../note/note\";\r\nimport Store from \"./stote\";\r\n\r\n\r\nasync function addNewNote(note:NoteProps) {\r\n  /*   const noteStr = JSON.stringify(note); */\r\n  const isSuccess = await Store.addNote(note) as boolean;\r\n  return isSuccess;\r\n}\r\n\r\nasync function getNotes() {\r\n  const notes = await Store.getNotes();\r\n  return notes;\r\n}\r\n\r\nasync function getNoteById(id:string) {\r\n  const note = await Store.getNoteById(id) as NoteProps;\r\n  return note;\r\n}\r\n\r\nasync function updateNote(note:NoteProps) {\r\n/*   const noteStr = JSON.stringify(note); */\r\n  const isSuccess = await Store.updateNote(note);\r\n  return note\r\n}\r\n\r\nasync function deleteNoteById(id:string) {\r\n  const isSuccess = await Store.deleteNoteById(id);\r\n  return isSuccess;\r\n}\r\n\r\nasync function getNotesByTags(tags:string) {\r\n  const notes = await getNotes();\r\n  const tagsArr = tags.split('#');\r\n  const notesArr:Array<NoteWithMatchConter> = [];\r\n\r\n  const getSortedNotes = () => {\r\n    notes.forEach((note) => {\r\n      let counter = 0;\r\n      const noteTags = note.titleTags + note.descriptionTags;\r\n      for(let i=0; i<tagsArr.length; i++) {\r\n        if(noteTags.includes(tagsArr[i])) {\r\n          counter++;\r\n        }\r\n      }\r\n      if(counter !== 0)\r\n        notesArr.push({note:note, amount:counter});\r\n    });\r\n  \r\n    notesArr.sort((a, b) => a.amount - b.amount);\r\n    const sortedNoteArr:Array<NoteProps> = [];\r\n    notesArr.forEach((note) => {\r\n      sortedNoteArr.push(note.note);\r\n    });\r\n    return sortedNoteArr;\r\n  }\r\n\r\n  return getSortedNotes();\r\n}\r\n\r\n\r\nasync function createStore() {\r\n  const isSuccess = Store.createDB();\r\n  return isSuccess;\r\n}\r\n\r\nconst ServerService = {\r\n  createStore,\r\n  getNotes,\r\n  getNoteById,\r\n  updateNote,\r\n  deleteNoteById,\r\n  addNewNote,\r\n  getNotesByTags\r\n}\r\n\r\nexport default ServerService;\r\n\r\ninterface NoteWithMatchConter {\r\n  note: NoteProps,\r\n  amount: number\r\n}","import React from 'react';\r\nimport \"./loader.scss\";\r\n\r\nexport default function Loader() {\r\n  \r\n  return(\r\n    <div className=\"loader\">\r\n      <div className=\"lds-ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react'; \r\n\r\nexport default function useFetching(callBack:Function):[Function, boolean, string]{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [err, setErr] = useState('');\r\n\r\n  let fetchData= async function() {\r\n    try {\r\n      setIsLoading(true);\r\n      await callBack();\r\n    } catch {\r\n      setErr(err)\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return [fetchData, isLoading, err];\r\n}","import React, { useState } from 'react';\r\nimport { NoteProps } from '../note/note';\r\nimport { hashCode } from '../../tool/hashFunction';\r\nimport { getDate } from '../../tool/getDate';\r\nimport ServerService from '../serverService/serverService';\r\nimport Loader from '../UI/loader/loader';\r\nimport useFetching from \"../hooky/useFetching\";\r\nimport \"./noteForm.scss\";\r\n\r\nexport default function NoteForm() {\r\n  const addNewNote = () => {\r\n    const noteToStore:NoteProps = makeNoteForStore();\r\n    ServerService.addNewNote(noteToStore);\r\n  };\r\n  const [addNoteToServer, isLoading, err] = useFetching(addNewNote);\r\n  const [note, setNote] = useState<NoteProps>({\r\n    date: '',\r\n    description:'',\r\n    title:'',\r\n    titleTags: '',\r\n    descriptionTags: '',\r\n    id:''\r\n  });\r\n\r\n\r\n  const onTitleChange = (event: React.ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    const tagsSrt = defineTags(value);\r\n    setNote({...note, title: value, titleTags: tagsSrt});\r\n  }\r\n\r\n  const onDescriptionChange = (event: React.ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    const tagsSrt = defineTags(value);\r\n    setNote({...note, description: value, descriptionTags: tagsSrt});\r\n  }\r\n\r\n  return(\r\n    <form className=\"noteForm\" onSubmit={addNote}>\r\n      {isLoading ?\r\n      <Loader></Loader> :\r\n      <div className=\"noteForm__wrapper\">\r\n        <input className=\"noteForm__titleInput\" placeholder=\"Title\" onChange={onTitleChange}\r\n               value={note.title}  type=\"text\"  required />\r\n        <textarea className=\"noteForm__descriptionInput\" placeholder=\"Description\" onChange={onDescriptionChange} \r\n               value={note.description}  />\r\n        <div className=\"noteForm__tagsInput\">{note.titleTags + note.descriptionTags}</div>\r\n        <button className=\"noteForm__saveBtn\" onClick={(ev) => addNote(ev)}>Save</button>\r\n      </div>\r\n      }   \r\n    </form>\r\n  );\r\n\r\n\r\n  async function addNote(event:React.FormEvent) {\r\n    event.preventDefault();\r\n    if(note.title.length !== 0) {\r\n      await addNoteToServer();\r\n      if(err) {\r\n        resetForm();\r\n      } else {\r\n        resetForm();\r\n      }\r\n    } else {\r\n      resetForm();\r\n      alert(\"Заголовок не может быть пустым\");\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    setNote({\r\n      date:String(Date.now()),\r\n      description:'',\r\n      title:'',\r\n      titleTags: '',\r\n      descriptionTags: '',\r\n      id:''\r\n    });\r\n  }\r\n\r\n  function defineTags(text: string) {\r\n    let tagsStr = '';\r\n    for(let i=0; i<text.length; i++) {\r\n      if(text[i] === '#' && (text[i-1] === ' ' || i-1<0)) {\r\n        while(text[i] !== ' ' && i < text.length) {\r\n          tagsStr += text[i];\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n    if(tagsStr.length === 1)\r\n      return ''\r\n    return tagsStr;\r\n  }\r\n\r\n  function makeNoteForStore() {\r\n    const newNote:NoteProps = {\r\n      ...note,\r\n      date: getDate(),\r\n      id: String(hashCode(note.title + Date.now()))\r\n    }\r\n    return newNote;\r\n  }\r\n}","import NoteForm from \"../../noteForm/noteForm\";\r\n\r\nexport function AddNewNotePage() {\r\n  return(\r\n  <div className=\"page addNewNotePage\">\r\n    <NoteForm></NoteForm>\r\n  </div>);\r\n}","import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { NoteProps } from \"../note/note\";\r\nimport useFetching from \"../hooky/useFetching\";\r\nimport ServerService from \"../serverService/serverService\";\r\nimport Loader from \"../UI/loader/loader\";\r\nimport \"./noteDetail.scss\";\r\n\r\n\r\nexport function NoteDetail(props:NoteProps) {\r\n  const save = async () => { await saveChanges()};\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [noteDetail, setNoteDetail] = useState<NoteProps>(props);\r\n  const [saveNote, isLoading, err] = useFetching(save);\r\n\r\n  const saveChanges = async () => {\r\n    await ServerService.updateNote(noteDetail);\r\n    setIsEditMode(false);\r\n  }\r\n\r\n  const onTitleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    const tagsSrt = defineTagsStr(value);\r\n    setNoteDetail({...noteDetail, title: value, titleTags: tagsSrt});\r\n  }\r\n\r\n  const onDescriptionChange = (event:React.ChangeEvent<any>) => {\r\n    const value = event.target.value;\r\n    const tagsSrt = defineTagsStr(value);\r\n    setNoteDetail({...noteDetail, description: value, descriptionTags: tagsSrt});\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {isLoading ?\r\n      <Loader></Loader> :\r\n        (!isEditMode) ? \r\n          <div className=\"noteDetail\">\r\n            <NavLink to={\"/notes\"} className=\"noteDetail__closeBtn\" >&#10060;</NavLink>\r\n            <button className=\"noteDetail__edit\" onClick={() => setIsEditMode(true)}>edit</button>\r\n            <p className=\"noteDetail__title\">{MakeMarckedHtml(noteDetail.title)}</p>\r\n            <p className=\"noteDetail__description\">{MakeMarckedHtml(noteDetail.description)}</p>\r\n            <span className=\"noteDetail__date\">{noteDetail.date}</span>\r\n            <span className=\"noteDetail__tags\">{noteDetail.titleTags + \" \" + noteDetail.descriptionTags}</span>\r\n          </div> :\r\n\r\n          <div className=\"noteDetail\">\r\n            <NavLink to={\"/notes\"} className=\"noteDetail__closeBtn\">&#10060;</NavLink>\r\n            <button className=\"noteDetail__edit\" onClick={() => saveNote()}>apply</button>\r\n            <input className=\"noteDetail__title\" value={noteDetail.title} onChange={onTitleChange}></input>\r\n            <textarea className=\"noteDetail__description textArea\" value={noteDetail.description} onChange={onDescriptionChange}></textarea>\r\n            <span className=\"noteDetail__date\">{noteDetail.date}</span>\r\n            <span className=\"noteDetail__tags\">{noteDetail.titleTags + \" \" + noteDetail.descriptionTags}</span>\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n\r\n  function defineTagsStr(text: string) {\r\n    let tagsStr = '';\r\n    for(let i=0; i<text.length; i++) {\r\n      if(text[i] === '#') {\r\n        while(text[i] !== ' ' && i < text.length) {\r\n          tagsStr += text[i];\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n    if(tagsStr.length === 1)\r\n      return ''\r\n    return tagsStr;\r\n  }\r\n\r\n  function MakeMarckedHtml(text:string) {\r\n    const textWithIutHash = deleteHashSymbolFromText(text);\r\n    const tagsArr = (props.titleTags + props.descriptionTags).split('#');\r\n    let textArr = textWithIutHash.split(\" \");\r\n    return (\r\n    <>\r\n      {textArr.map((textt, i) => {\r\n        return tagsArr.includes(textArr[i]) ? <span key={Date.now()} className=\"marckSpan\">{textArr[i]+ ' '}</span> : textArr[i] + ' ';\r\n      })}\r\n    </>); \r\n  }\r\n\r\n  function deleteHashSymbolFromText(text:string) {\r\n    let newText = \"\";\r\n    for(let i=0; i<text.length;i++) {\r\n      if(text[i] !== '#') {\r\n        newText += text[i];\r\n      }\r\n    }\r\n    return newText;\r\n  }\r\n\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { NoteProps } from \"../../note/note\";\r\nimport { NoteDetail } from \"../../noteDetail/noteDetail\";\r\nimport useFetching from \"../../hooky/useFetching\";\r\nimport ServerService from \"../../serverService/serverService\";\r\nimport Loader from \"../../UI/loader/loader\";\r\n\r\nexport function NoteDetailPage () {\r\n  const param = useParams<{id:string}>();\r\n  const getNote = async () => {\r\n    const note = await ServerService.getNoteById(param.id);\r\n    setNote(note);\r\n  }\r\n  const [getNoteFromServer, isLoading, err] = useFetching(getNote);\r\n  const [note, setNote] = useState<NoteProps>();\r\n\r\n\r\n  useEffect(() => {\r\n    getNoteFromServer();\r\n  }, [])\r\n\r\n  return(\r\n  <div className=\"page noteDetailPage\">\r\n    {isLoading ?\r\n    <Loader></Loader> :\r\n    <div className=\"noteDetailPage_wrapper\">\r\n      {(note !== undefined) ? \r\n        <NoteDetail {...note}></NoteDetail> :\r\n        <h3>Заметка не найдена</h3>\r\n      }\r\n    </div>\r\n    }\r\n  </div>)\r\n}","export function deleteHashSymbols(text:string) {\r\n  let newText = '';\r\n  for(let i=0; i<text.length; i++) {\r\n    if(text[i] !== '#') {\r\n      newText += text[i];\r\n    }\r\n  }\r\n  return newText;\r\n}","import { useHistory } from \"react-router\";\r\nimport { deleteHashSymbols } from \"../../tool/deleteHashSymbol\";\r\nimport ServerService from \"../serverService/serverService\";\r\nimport \"./note.scss\";\r\n\r\nexport function Note(noteProps:NoteProps) {\r\n  const router = useHistory();\r\n\r\n  const onNoteClick = () => {\r\n    router.push(`/notes/${noteProps.id}`);\r\n  }\r\n\r\n  const onDeleteBtnClick = async () => {\r\n    await ServerService.deleteNoteById(noteProps.id);\r\n    router.push(\"/notes\");\r\n  }\r\n\r\n  return(\r\n    <div className=\"note\">\r\n      <div className=\"note__wrapper\" onClick={onNoteClick}>\r\n        <h2 className=\"note__title\">{deleteHashSymbols(noteProps.title)}</h2>\r\n        <p className=\"note__description\">{deleteHashSymbols(noteProps.description)}</p>\r\n        <span className=\"note__tags\">{noteProps.titleTags + \" \" + noteProps.descriptionTags}</span>\r\n        <span className=\"note__date\">{noteProps.date}</span>\r\n      </div>\r\n      <div className=\"note__deleteBtn\" onClick={onDeleteBtnClick}>&#128465;</div>\r\n    </div>);\r\n}\r\n\r\nexport interface NoteProps {\r\n  title: string,\r\n  description: string,\r\n  date: string,\r\n  titleTags: string,\r\n  descriptionTags: string,\r\n  id:string\r\n}\r\n","import React, { useState } from 'react';\r\nimport './searchBar.scss';\r\n\r\nexport function SearchBar(props: SearchBarProps){\r\n  const [serchStr, setSerchStr] = useState('');\r\n\r\n  return(\r\n    <div className=\"searchBar\">\r\n      <label className=\"searchBar__wrapper\">\r\n        <div className=\"searchBar__icon\"></div>\r\n        <input onChange={makeSearchStr} placeholder=\"Search (enter tags seperated with whitespace)\" className=\"searchBar__input\" />\r\n      </label>\r\n      <button onClick={setQuery} type=\"submit\" className=\"searchBar__btn\">Search</button>\r\n    </div>\r\n  );\r\n\r\n  function makeSearchStr(event:React.ChangeEvent<HTMLInputElement>) {\r\n    const value = event.target.value;\r\n    let searchStr = '';\r\n    searchStr = value.split(' ').join('#');\r\n    setSerchStr(searchStr);\r\n  }\r\n\r\n  function setQuery() {\r\n    props.setQuery(serchStr);\r\n  }\r\n}\r\n\r\nexport interface SearchBarProps {\r\n  setQuery: Function,\r\n  query: string\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Note, NoteProps } from \"../../note/note\";\r\nimport { SearchBar, SearchBarProps } from \"../../searchBar/searchBar\";\r\nimport useFetching from \"../../hooky/useFetching\"\r\nimport ServerService from \"../../serverService/serverService\";\r\nimport Loader from \"../../UI/loader/loader\";\r\nimport \"./notesPage.scss\";\r\n\r\nexport function NotesPage() {\r\n  const getNotes = async  () => {\r\n    const notes = await ServerService.getNotesByTags(query);\r\n    setNotes(notes);\r\n  }\r\n  const [query, setQuery] = useState('');\r\n  const [getNotesFromServer, isLoading, err] = useFetching(getNotes);\r\n  const [notes, setNotes] = useState<Array<NoteProps>>([]);\r\n  useEffect(() => {\r\n    getNotesFromServer();\r\n  }, [query]);\r\n\r\n  const searchBarProps: SearchBarProps = {\r\n    query,\r\n    setQuery\r\n  }\r\n\r\n  return(\r\n  <div className=\"page notesPage\">\r\n    {isLoading ?\r\n      <Loader></Loader> :\r\n      <>\r\n        <SearchBar {...searchBarProps}></SearchBar>\r\n{        <div className=\"notesPage__wrapper\">\r\n          { (notes.length === 0) ?\r\n            <h2>Ничего не найдено</h2> :\r\n            notes.map((note) => <Note {...note} key={Date.now() + note.title}></Note>)}\r\n        </div>}\r\n      </>}\r\n  </div>)\r\n}","export function NotFoundPage() {\r\n  return(\r\n    <div className=\"page notFoundPage\">\r\n      <div className=\"noteFoundPaage__wrapper\">\r\n        <h1>Not Found</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { Redirect, Route, Switch, useLocation } from \"react-router\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { AddNewNotePage } from \"./components/pages/addNewNotePage/addNewNotePage\";\r\nimport { NoteDetailPage } from \"./components/pages/noteDetailPage/noteDetailPage\";\r\nimport { NotesPage } from \"./components/pages/notesPage/notesPage\";\r\nimport { NotFoundPage } from \"./components/pages/notFoundPage/notFoundPage\";\r\n\r\nexport default function AppRouter() {\r\n  let location =  useLocation();\r\n\r\n  return(\r\n    <TransitionGroup>\r\n      <CSSTransition key={location.key} timeout={200} classNames=\"page\" unmountOnExit>\r\n        <Switch location={location}>\r\n          <Route path={`/addNewNote`}>\r\n            <AddNewNotePage></AddNewNotePage>\r\n          </Route>\r\n          <Route exact path=\"/notes\">\r\n            <NotesPage></NotesPage>\r\n          </Route>\r\n          <Route exact path=\"/notes/:id\">\r\n            <NoteDetailPage></NoteDetailPage>\r\n          </Route>\r\n          <Route path=\"/notfound\">\r\n            <NotFoundPage></NotFoundPage>\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Redirect to='/addNewNote'></Redirect>\r\n          </Route>\r\n          <Redirect to='/notfound'></Redirect>\r\n        </Switch>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n}","import { BrowserRouter } from 'react-router-dom';\r\nimport Header from './components/header/header';\r\nimport AppRouter from './AppRouter';\r\nimport ServerService from './components/serverService/serverService';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  ServerService.createStore();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <AppRouter></AppRouter>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}